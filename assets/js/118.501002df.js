(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{476:function(t,e,a){"use strict";a.r(e);var _=a(8),s=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-初识mq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-初识mq"}},[t._v("#")]),t._v(" 1.初识MQ")]),t._v(" "),e("blockquote",[e("p",[t._v("MQ，中文是消息队列（MessageQueue）")])]),t._v(" "),e("h3",{attrs:{id:"_1-1-同步和异步通讯"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-同步和异步通讯"}},[t._v("#")]),t._v(" 1.1 同步和异步通讯")]),t._v(" "),e("p",[t._v("微服务间通讯有同步和异步两种方式：")]),t._v(" "),e("ul",[e("li",[t._v("同步通讯：就像打电话，需要实时响应。")]),t._v(" "),e("li",[t._v("异步通讯：就像发邮件，不需要马上回复。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717161939695.281uzz68tbgg.webp",alt:""}}),t._v("\n两种方式各有优劣，打电话可以立即得到响应，但是你却不能跟多个人同时通话。发送邮件可以同时与多个人收发邮件，但是往往响应会有延迟。")]),t._v(" "),e("h3",{attrs:{id:"_1-2-同步通讯"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-同步通讯"}},[t._v("#")]),t._v(" 1.2 同步通讯")]),t._v(" "),e("blockquote",[e("p",[t._v("我们之前学习的Feign调用就属于同步方式")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717162004285.2uewi0ng65vk.webp",alt:""}})]),t._v(" "),e("h3",{attrs:{id:"_1-3-异步通讯"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-异步通讯"}},[t._v("#")]),t._v(" 1.3 异步通讯")]),t._v(" "),e("p",[t._v("异步调用则可以避免上述问题：")]),t._v(" "),e("p",[t._v("我们以购买商品为例，用户支付后需要调用订单服务完成订单状态修改，调用物流服务，从仓库分配响应的库存并准备发货。")]),t._v(" "),e("p",[t._v("在事件模式中，支付服务是"),e("strong",[t._v("事件发布者")]),t._v("（publisher），在支付完成后只需要发布一个支付成功的事件（event），事件中带上订单id。")]),t._v(" "),e("p",[t._v("订单服务和物流服务是"),e("strong",[t._v("事件订阅者")]),t._v("（Consumer），订阅支付成功的事件，监听到事件后完成自己业务即可。")]),t._v(" "),e("p",[t._v("为了解除事件发布者与订阅者之间的耦合，两者并不是直接通信，而是有一个"),e("strong",[t._v("中间人")]),t._v("（Broker）。发布者发布事件到Broker，不关心谁来订阅事件。订阅者从Broker订阅事件，不关心谁发来的消息。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210422095356088.2a8j7ui14lkw.webp",alt:""}})]),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),e("ul",[e("li",[t._v("吞吐量提升：无需等待订阅者处理完成，响应更快速")]),t._v(" "),e("li",[t._v("故障隔离：服务没有直接调用，不存在级联失败问题")]),t._v(" "),e("li",[t._v("调用间没有阻塞，不会造成无效的资源占用")]),t._v(" "),e("li",[t._v("耦合度极低，每个服务都可以灵活插拔，可替换")]),t._v(" "),e("li",[t._v("流量削峰：不管发布事件的流量波动多大，都由Broker接收，订阅者可以按照自己的速度去处理事件")])]),t._v(" "),e("p",[t._v("缺点：")]),t._v(" "),e("ul",[e("li",[t._v("架构复杂了，业务没有明显的流程线，不好管理")]),t._v(" "),e("li",[t._v("需要依赖于Broker的可靠、安全、性能")])]),t._v(" "),e("h2",{attrs:{id:"_2-rabbitmq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-rabbitmq"}},[t._v("#")]),t._v(" 2. RabbitMQ")]),t._v(" "),e("h3",{attrs:{id:"_2-1-基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基础"}},[t._v("#")]),t._v(" 2.1 基础")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717162752376.1gel4o819qf4.webp",alt:""}})]),t._v(" "),e("p",[t._v("RabbitMQ架构中的一些角色：")]),t._v(" "),e("ul",[e("li",[t._v("publisher：生产者")]),t._v(" "),e("li",[t._v("consumer：消费者")]),t._v(" "),e("li",[t._v("exchange个：交换机，负责消息路由")]),t._v(" "),e("li",[t._v("queue：队列，存储消息")]),t._v(" "),e("li",[t._v("virtualHost：虚拟主机，隔离不同租户的exchange、queue、消息的隔离")])]),t._v(" "),e("h3",{attrs:{id:"_2-2-rabbitmq消息模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-rabbitmq消息模型"}},[t._v("#")]),t._v(" 2.2 RabbitMQ消息模型")]),t._v(" "),e("p",[t._v("RabbitMQ官方提供了5个不同的Demo示例，对应了不同的消息模型：\n"),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717163332646.2gb0wzrsk8u8.webp",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_3-springamqp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-springamqp"}},[t._v("#")]),t._v(" 3. SpringAMQP")]),t._v(" "),e("h3",{attrs:{id:"_3-1-基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基础"}},[t._v("#")]),t._v(" 3.1 基础")]),t._v(" "),e("blockquote",[e("p",[t._v("SpringAMQP是基于RabbitMQ封装的一套模板，并且还利用SpringBoot对其实现了自动装配，使用起来非常方便。\n官方地址：https://spring.io/projects/spring-amqp")])]),t._v(" "),e("img",{attrs:{align:"left",width:"50%",height:"300px",src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717164024967.6ad6y4iph85c.webp"}}),t._v(" "),e("img",{attrs:{align:"right",width:"50%",height:"300px",src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717164038678.32zooxrlbp1c.webp"}}),t._v(" "),e("p",[t._v("SpringAMQP提供了三个功能：")]),t._v(" "),e("ul",[e("li",[t._v("自动声明队列、交换机及其绑定关系")]),t._v(" "),e("li",[t._v("基于注解的监听器模式，异步接收消息")]),t._v(" "),e("li",[t._v("封装了RabbitTemplate工具，用于发送消息")])]),t._v(" "),e("h3",{attrs:{id:"_3-2-发布-订阅模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-发布-订阅模型"}},[t._v("#")]),t._v(" 3.2 发布/订阅模型")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210717165309625.2qtwxrqcsse8.webp",alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("Publisher：生产者，也就是要发送消息的程序，但是不再发送到队列中，而是发给X（交换机）")]),t._v(" "),e("li",[t._v("Exchange：交换机，图中的X。一方面，接收生产者发送的消息。另一方面，知道如何处理消息，例如递交给某个特别队列、递交给所有队列、或是将消息丢弃。到底如何操作，取决于Exchange的类型。Exchange有以下3种类型：\n"),e("ul",[e("li",[t._v("Fanout：广播，将消息交给所有绑定到交换机的队列")]),t._v(" "),e("li",[t._v("Direct：定向，把消息交给符合指定routing key 的队列")]),t._v(" "),e("li",[t._v("Topic：通配符，把消息交给符合routing pattern（路由模式） 的队列")])])]),t._v(" "),e("li",[t._v("Consumer：消费者，与以前一样，订阅队列，没有变化")]),t._v(" "),e("li",[t._v("Queue：消息队列也与以前一样，接收消息、缓存消息。")])]),t._v(" "),e("p",[e("mark",[e("strong",[t._v("Exchange（交换机）只负责转发消息，不具备存储消息的能力")]),t._v("，因此如果没有任何队列与Exchange绑定，或者没有符合路由规则的队列，那么消息会丢失！")])])])}),[],!1,null,null,null);e.default=s.exports}}]);
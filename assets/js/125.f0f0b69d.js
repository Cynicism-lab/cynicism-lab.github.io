(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{488:function(a,s,t){"use strict";t.r(s);var n=t(8),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-多级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-多级缓存"}},[a._v("#")]),a._v(" 1. 多级缓存")]),a._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[a._v("传统缓存策略")]),a._v(" "),s("p",[a._v("传统的缓存策略一般是请求到达Tomcat后，先查询Redis，如果未命中则查询数据库。但这样，请求要经过Tomcat处理，Tomcat的性能成为整个系统的瓶颈；同时一旦Redis缓存失效时，会对数据库产生冲击")])]),a._v(" "),s("p",[a._v("多级缓存就是充分利用请求处理的每个环节，分别添加缓存，减轻Tomcat压力，提升服务性能：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210821080954947.1higqgrye0u8.webp",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("浏览器访问静态资源时，优先读取浏览器本地缓存")]),a._v(" "),s("li",[a._v("访问非静态资源（ajax查询数据）时，访问服务端")]),a._v(" "),s("li",[a._v("请求到达Nginx后，优先读取Nginx本地缓存")]),a._v(" "),s("li",[a._v("如果Nginx本地缓存未命中，则去直接查询Redis（不经过Tomcat）")]),a._v(" "),s("li",[a._v("如果Redis查询未命中，则查询Tomcat")]),a._v(" "),s("li",[a._v("请求进入Tomcat后，优先查询JVM进程缓存")]),a._v(" "),s("li",[a._v("如果JVM进程缓存未命中，则查询数据库")])]),a._v(" "),s("blockquote",[s("p",[a._v("在多级缓存架构中，Nginx内部需要编写本地缓存查询、Redis查询、Tomcat查询的业务逻辑，因此这样的nginx服务不再是一个"),s("strong",[a._v("反向代理服务器")]),a._v("，而是一个编写"),s("strong",[a._v("业务的Web服务器了")]),a._v("\n这样的业务Nginx服务也需要搭建集群来提高并发，再有专门的nginx服务来做反向代理")])]),a._v(" "),s("p",[a._v("可见，多级缓存的关键有两个：")]),a._v(" "),s("ul",[s("li",[a._v("一个是在nginx中编写业务，实现nginx本地缓存、Redis、Tomcat的查询")]),a._v(" "),s("li",[a._v("另一个就是在Tomcat中实现JVM进程缓存\n其中Nginx编程则会用到OpenResty框架结合Lua这样的语言")])]),a._v(" "),s("h2",{attrs:{id:"_2-jvm进程缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-jvm进程缓存"}},[a._v("#")]),a._v(" 2. JVM进程缓存")]),a._v(" "),s("p",[a._v("缓存在日常开发中启动至关重要的作用，由于是存储在内存中，数据的读取速度是非常快的，能大量减少对数据库的访问，减少数据库的压力。我们把缓存分为两类：")]),a._v(" "),s("ul",[s("li",[a._v("分布式缓存，例如Redis：\n"),s("ul",[s("li",[a._v("优点：存储容量更大、可靠性更好、可以在集群间共享")]),a._v(" "),s("li",[a._v("缺点：访问缓存有网络开销")]),a._v(" "),s("li",[a._v("场景：缓存数据量较大、可靠性要求较高、需要在集群间共享")])])]),a._v(" "),s("li",[a._v("进程本地缓存，例如HashMap、GuavaCache：\n"),s("ul",[s("li",[a._v("优点：读取本地内存，没有网络开销，速度更快")]),a._v(" "),s("li",[a._v("缺点：存储容量有限、可靠性较低、无法共享")]),a._v(" "),s("li",[a._v("场景：性能要求较高，缓存数据量较小")])])])]),a._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[a._v("笔记")]),a._v(" "),s("p",[s("strong",[a._v("Caffeine")]),a._v("是一个基于Java8开发的，提供了近乎最佳命中率的高性能的本地缓存库。目前Spring内部的缓存使用的就是Caffeine。GitHub地址：https://github.com/ben-manes/caffeine")])]),a._v(" "),s("p",[s("mark",[a._v("Caffeine既然是缓存的一种，肯定需要有缓存的清除策略，不然的话内存总会有耗尽的时候。")]),a._v("\nCaffeine提供了三种缓存驱逐策略：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("基于容量")]),a._v("：设置缓存的数量上限")]),a._v(" "),s("li",[s("strong",[a._v("基于时间")]),a._v("：设置缓存的有效时间")]),a._v(" "),s("li",[s("strong",[a._v("基于引用")]),a._v("：设置缓存为软引用或弱引用，利用GC来回收缓存数据。性能较差，不建议使用。")])]),a._v(" "),s("blockquote",[s("p",[s("strong",[a._v("注意")]),a._v("：在默认情况下，当一个缓存元素过期的时候，Caffeine不会自动立即将其清理和驱逐。而是在一次读或写操作后，或者在空闲时间完成对失效数据的驱逐。")])]),a._v(" "),s("h2",{attrs:{id:"_3-lua语法入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-lua语法入门"}},[a._v("#")]),a._v(" 3. Lua语法入门")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("概念")]),a._v(" "),s("p",[a._v("Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。官网：https://www.lua.org/")])]),a._v(" "),s("blockquote",[s("p",[a._v("Nginx编程需要用到Lua语言，因此我们必须先入门Lua的基本语法。")])]),a._v(" "),s("h3",{attrs:{id:"_3-1-变量和循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-变量和循环"}},[a._v("#")]),a._v(" 3.1 变量和循环")]),a._v(" "),s("h4",{attrs:{id:"_3-1-1-lua的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-lua的数据类型"}},[a._v("#")]),a._v(" 3.1.1 Lua的数据类型")]),a._v(" "),s("p",[a._v("Lua中支持的常见数据类型包括：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210821091835406.7dyupwksp37k.webp",alt:""}})]),a._v(" "),s("blockquote",[s("p",[a._v("Lua提供了type()函数来判断一个变量的数据类型")])]),a._v(" "),s("h4",{attrs:{id:"_3-1-2-声明变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-声明变量"}},[a._v("#")]),a._v(" 3.1.2 声明变量")]),a._v(" "),s("p",[a._v("🏷️Lua声明变量的时候无需指定数据类型，而是用local来声明变量为局部变量：")]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明字符串，可以用单引号或双引号，")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 字符串拼接可以使用 ..")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("..")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'world'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明数字")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("21")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明布尔类型")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("true")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("blockquote",[s("p",[a._v("Lua中的table类型既可以作为数组，又可以作为Java中的map来使用。数组就是特殊的table，key是数组角标而已")])]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明数组 ，key为角标的 table")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'java'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'python'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'lua'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明table，类似java的map")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Jack'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("blockquote",[s("p",[a._v("Lua中的数组角标是从1开始，访问的时候与Java中类似：")])]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 访问数组，lua数组的角标从1开始")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("blockquote",[s("p",[a._v("Lua中的table可以用key来访问：")])]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 访问table")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"_3-1-3-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-循环"}},[a._v("#")]),a._v(" 3.1.3 循环")]),a._v(" "),s("blockquote",[s("p",[a._v("对于table，我们可以利用for循环来遍历。不过数组和普通table遍历略有差异。")])]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("遍历数组：")])])]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明数组 key为索引的 table")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'java'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'python'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'lua'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 遍历数组")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ipairs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("ul",[s("li",[s("strong",[a._v("遍历普通table")])])]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 声明map，也就是table")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("local")]),a._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Jack'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 遍历table")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("pairs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"_3-2-条件控制、函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-条件控制、函数"}},[a._v("#")]),a._v(" 3.2 条件控制、函数")]),a._v(" "),s("p",[a._v("Lua中的条件控制和函数声明与Java类似。")]),a._v(" "),s("h4",{attrs:{id:"_3-2-1-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-函数"}},[a._v("#")]),a._v(" 3.2.1 函数")]),a._v(" "),s("p",[a._v("定义函数的语法：")]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" 函数名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" argument1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" argument2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" argumentn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- 函数体")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" 返回值\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h4",{attrs:{id:"_3-2-2-条件控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-条件控制"}},[a._v("#")]),a._v(" 3.2.2 条件控制")]),a._v(" "),s("p",[a._v("类似Java的条件控制，例如if、else语法：")]),a._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("布尔表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--[ 布尔表达式为 true 时执行该语句块 --]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--[ 布尔表达式为 false 时执行该语句块 --]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("与java不同，布尔表达式中的逻辑运算是基于英文单词：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210821092657918.6dbc50gwd1fk.webp",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"_4-实现多级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-实现多级缓存"}},[a._v("#")]),a._v(" 4. 实现多级缓存")]),a._v(" "),s("blockquote",[s("p",[a._v("多级缓存的实现离不开Nginx编程，而Nginx编程又离不开OpenResty。")])]),a._v(" "),s("h3",{attrs:{id:"_4-1-openresty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-openresty"}},[a._v("#")]),a._v(" 4.1 OpenResty")]),a._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[a._v("OpenResty")]),a._v(" "),s("p",[a._v("OpenResty® 是一个基于 Nginx的高性能 Web 平台，用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。")])]),a._v(" "),s("p",[a._v("具备下列特点：")]),a._v(" "),s("ul",[s("li",[a._v("具备Nginx的完整功能")]),a._v(" "),s("li",[a._v("基于Lua语言进行扩展，集成了大量精良的 Lua 库、第三方模块")]),a._v(" "),s("li",[a._v("允许使用Lua"),s("strong",[a._v("自定义业务逻辑")]),a._v("、"),s("strong",[a._v("自定义库")])])]),a._v(" "),s("p",[a._v("官方网站： https://openresty.org/cn/")]),a._v(" "),s("h3",{attrs:{id:"_4-2-redis缓存预热"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-redis缓存预热"}},[a._v("#")]),a._v(" 4.2 Redis缓存预热")]),a._v(" "),s("p",[a._v("Redis缓存会面临冷启动问题：\n"),s("strong",[a._v("冷启动")]),a._v("：服务刚刚启动时，Redis中并没有缓存，如果所有商品数据都在第一次查询时添加缓存，可能会给数据库带来较大压力。\n"),s("strong",[a._v("缓存预热")]),a._v("：在实际开发中，我们可以利用大数据统计用户访问的热点数据，在项目启动时将这些热点数据提前查询并保存到Redis中。")]),a._v(" "),s("h2",{attrs:{id:"_5-缓存同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-缓存同步"}},[a._v("#")]),a._v(" 5. 缓存同步")]),a._v(" "),s("blockquote",[s("p",[a._v("大多数情况下，浏览器查询到的都是缓存数据，如果缓存数据与数据库数据存在较大差异，可能会产生比较严重的后果。所以我们必须保证数据库数据、缓存数据的一致性，这就是缓存与数据库的同步。")])]),a._v(" "),s("h3",{attrs:{id:"_5-1-数据同步策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-数据同步策略"}},[a._v("#")]),a._v(" 5.1 数据同步策略")]),a._v(" "),s("p",[a._v("缓存数据同步的常见方式有三种：\n"),s("strong",[a._v("设置有效期")]),a._v("：给缓存设置有效期，到期后自动删除。再次查询时更新")]),a._v(" "),s("ul",[s("li",[a._v("优势：简单、方便")]),a._v(" "),s("li",[a._v("缺点：时效性差，缓存过期之前可能不一致")]),a._v(" "),s("li",[a._v("场景：更新频率较低，时效性要求低的业务\n"),s("strong",[a._v("同步双写")]),a._v("：在修改数据库的同时，直接修改缓存")]),a._v(" "),s("li",[a._v("优势：时效性强，缓存与数据库强一致")]),a._v(" "),s("li",[a._v("缺点：有代码侵入，耦合度高；")]),a._v(" "),s("li",[a._v("场景：对一致性、时效性要求较高的缓存数据\n**异步通知：**修改数据库时发送事件通知，相关服务监听到通知后修改缓存数据")]),a._v(" "),s("li",[a._v("优势：低耦合，可以同时通知多个缓存服务")]),a._v(" "),s("li",[a._v("缺点：时效性一般，可能存在中间不一致状态")]),a._v(" "),s("li",[a._v("场景：时效性要求一般，有多个服务需要同步")])]),a._v(" "),s("p",[a._v("而异步实现又可以基于MQ或者Canal来实现：\n1）基于MQ的异步通知：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210821115552327.2lob65lkeudc.webp",alt:""}})]),a._v(" "),s("p",[a._v("解读：")]),a._v(" "),s("ul",[s("li",[a._v("商品服务完成对数据的修改后，只需要发送一条消息到MQ中。")]),a._v(" "),s("li",[a._v("缓存服务监听MQ消息，然后完成对缓存的更新\n"),s("mark",[a._v("依然有少量的代码侵入")])])]),a._v(" "),s("p",[a._v("2）基于Canal的通知\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210821115719363.1t0eo68o865c.webp",alt:""}}),a._v("\n解读：")]),a._v(" "),s("ul",[s("li",[a._v("商品服务完成商品修改后，业务直接结束，没有任何代码侵入")]),a._v(" "),s("li",[a._v("Canal监听MySQL变化，当发现变化后，立即通知缓存服务")]),a._v(" "),s("li",[a._v("缓存服务接收到canal通知，更新缓存\n"),s("mark",[a._v("代码零侵入")])])]),a._v(" "),s("h3",{attrs:{id:"_5-2-认识canal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-认识canal"}},[a._v("#")]),a._v(" 5.2 认识Canal")]),a._v(" "),s("p",[s("strong",[a._v("Canal [kə'næl]")]),a._v("，译意为水道/管道/沟渠，canal是阿里巴巴旗下的一款开源项目，基于Java开发。基于数据库增量日志解析，提供增量数据订阅&消费。GitHub的地址：https://github.com/alibaba/canal")]),a._v(" "),s("p",[a._v("Canal是基于mysql的主从同步来实现的，MySQL主从同步的原理如下：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/image-20210821115914748.1h78n037bkao.webp",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("1）MySQL master 将数据变更写入二进制日志( binary log），其中记录的数据叫做binary log events")]),a._v(" "),s("li",[a._v("2）MySQL slave 将 master 的 binary log events拷贝到它的中继日志(relay log)")]),a._v(" "),s("li",[a._v("3）MySQL slave 重放 relay log 中事件，将数据变更反映它自己的数据")])]),a._v(" "),s("blockquote",[s("p",[a._v("Canal就是把自己伪装成MySQL的一个slave节点，从而监听master的binary log变化。再把得到的变化信息通知给Canal的客户端，进而完成对其它数据库的同步。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
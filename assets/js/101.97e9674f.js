(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{460:function(t,v,_){"use strict";_.r(v);var s=_(8),o=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("介绍")]),t._v(" "),v("p",[t._v("MyBatis是一款优秀的 "),v("strong",[t._v("持久层")]),t._v(" "),v("strong",[t._v("框架")]),t._v("，用于简化JDBC的开发")])]),t._v(" "),v("h2",{attrs:{id:"_1-介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[t._v("#")]),t._v(" 1. 介绍")]),t._v(" "),v("blockquote",[v("p",[t._v("Mybatis会把数据库执行的查询结果，使用实体类封装起来（一行记录对应一个实体类对象）")])]),t._v(" "),v("p",[t._v("Mybatis操作数据库的步骤：")]),t._v(" "),v("ol",[v("li",[t._v("准备工作(创建springboot工程、数据库表user、实体类User)")]),t._v(" "),v("li",[t._v("引入Mybatis的相关依赖，配置Mybatis(数据库连接信息)")]),t._v(" "),v("li",[t._v("编写SQL语句(注解/XML)")])]),t._v(" "),v("p",[v("strong",[t._v("Mybatis VS JDBC：")])]),t._v(" "),v("ol",[v("li",[t._v("数据库连接四要素(驱动、链接、用户名、密码)，都配置在springboot默认的配置文件 "),v("strong",[t._v("application.properties")]),t._v("中")]),t._v(" "),v("li",[t._v("查询结果的解析及封装，由mybatis自动完成映射封装，我们无需关注")]),t._v(" "),v("li",[t._v("在mybatis中使用了"),v("strong",[t._v("数据库连接池")]),t._v("技术，从而避免了频繁的创建连接、销毁连接而带来的资源浪费。\n"),v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/mybatis.webp",alt:""}})])]),t._v(" "),v("h2",{attrs:{id:"_2-数据库连接池"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据库连接池"}},[t._v("#")]),t._v(" 2. 数据库连接池")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Cynicism-lab/MyResource@gh-pages/image/%E8%BF%9E%E6%8E%A5%E6%B1%A0.webp",alt:""}}),t._v("\n数据库连接池是个容器，负责分配、管理数据库连接(Connection)")]),t._v(" "),v("ul",[v("li",[t._v("程序在启动时，会在数据库连接池(容器)中，创建一定数量的Connection对象\n允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个")]),t._v(" "),v("li",[t._v("客户端在执行SQL时，先从连接池中获取一个Connection对象，然后在执行SQL语句，SQL语句执行完之后，释放Connection时就会把Connection对象归还给连接池（Connection对象可以复用）")])]),t._v(" "),v("p",[t._v("释放空闲时间超过最大空闲时间的连接，来避免因为没有释放连接而引起的数据库连接遗漏")]),t._v(" "),v("ul",[v("li",[t._v("客户端获取到Connection对象了，但是Connection对象并没有去访问数据库(处于空闲)，数据库连接池发现Connection对象的空闲时间 > 连接池中预设的最大空闲时间，此时数据库连接池就会自动释放掉这个连接对象")])]),t._v(" "),v("p",[v("strong",[t._v("数据库连接池的好处：")])]),t._v(" "),v("ol",[v("li",[t._v("资源重用")]),t._v(" "),v("li",[t._v("提升系统响应速度")]),t._v(" "),v("li",[t._v("避免数据库连接遗漏")])]),t._v(" "),v("p",[v("strong",[t._v("常用数据库连接池：")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Hikari（追光者） [Spring Boot 默认的连接池]")])]),t._v(" "),v("li",[v("p",[t._v("Druid（德鲁伊）")]),t._v(" "),v("ul",[v("li",[t._v("Druid连接池是阿里巴巴开源的数据库连接池项目")]),t._v(" "),v("li",[t._v("功能强大，性能优秀，是Java语言最好的数据库连接池之一")])])])]),t._v(" "),v("h2",{attrs:{id:"_3-lombok"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-lombok"}},[t._v("#")]),t._v(" 3. Lombok")]),t._v(" "),v("blockquote",[v("p",[t._v("Lombok是一个实用的Java类库，可以通过简单的注解来简化和消除一些必须有但显得很臃肿的Java代码。")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[t._v("注解")])]),t._v(" "),v("th",[v("strong",[t._v("作用")])])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("@Getter/@Setter")]),t._v(" "),v("td",[t._v("为所有的属性提供get/set方法")])]),t._v(" "),v("tr",[v("td",[t._v("@ToString")]),t._v(" "),v("td",[t._v("会给类自动生成易阅读的  toString 方法")])]),t._v(" "),v("tr",[v("td",[t._v("@EqualsAndHashCode")]),t._v(" "),v("td",[t._v("根据类所拥有的非静态字段自动重写 equals 方法和  hashCode 方法")])]),t._v(" "),v("tr",[v("td",[t._v("@Data")]),t._v(" "),v("td",[t._v("提供了更综合的生成代码功能（@Getter  + @Setter + @ToString + @EqualsAndHashCode）")])]),t._v(" "),v("tr",[v("td",[t._v("@NoArgsConstructor")]),t._v(" "),v("td",[t._v("为实体类生成无参的构造器方法")])]),t._v(" "),v("tr",[v("td",[t._v("@AllArgsConstructor")]),t._v(" "),v("td",[t._v("为实体类生成除了static修饰的字段之外带有各参数的构造器方法。")])])])])])}),[],!1,null,null,null);v.default=o.exports}}]);